Git
* Git is software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development. 
* Its goals include speed, data integrity, and support for distributed, non-linear workflows.

Gitbash

* Git Bash is an application that adds an emulation layer on Microsoft Windows environments to use Git command-line experience. 
* It is just like a package that installs some common bash utilities on a Windows operating system. 
* It let us use all the Git features as well as most of the standard UNIX commands in a command-line interface on Windows.

Github
* GitHub is a Git repository hosting service. 
* GitHub also facilitates with many of its features, such as access control and collaboration.
* It provides a Web-based graphical interface.

Benefits of github
* It is easy to contribute to open source projects via GitHub.
* It helps to create an excellent document.
* It allows your work to get out there in front of the public.
* You can track changes in your code across versions.

Git Commands
1.Git config command
* This command configures the user. 
* The Git config command is the first and necessary command used on the Git command line. *
* This command sets the author name and email address to be used with your commits.

		Syntax
			$ git config --global user.name "ImDwivedi1"  
			$ git config --global user.email "Himanshudubey481@gmail.com"  
2.git init 
* The init command will initialize an empty repository.
		syntax
		    $ git init Demo  
3.git clone
	git clone is primarily used to point to an existing repo and make a clone or copy of that repo at in a new directory, at another location. 
	The original repository can be located on the local filesystem or on remote machine accessible supported protocols. 
	The git clone command copies an existing Git repository.

4.git log
		Git log is a utility tool to review and read a history of everything that happens to a repository.
5.git add 
		The git add command adds content from the working directory into the staging area (or “index”) for the next commit.
		When the git commit command is run, by default it only looks at this staging area, so git add is used to craft what exactly you would like your next commit snapshot to look like.
6.git commit
		The git commit command takes all the file contents that have been staged with git add and records a new permanant snapshot in the database and then moves the branch pointer on the current branch up to it.
		
7.git clean
		The git clean command is used to remove unwanted files from your working directory. 
		This could include removing temporary build artifacts or merge conflict files.

8.git reset
		The git reset command is primarily used to undo things.
		
9.git status
		The git status command displays the state of the working directory and the staging area.
		It lets you see which changes have been staged, which haven't, and which files aren't being tracked by Git.
10.git commit -m
		The most common option used with git commit is the -m option. The -m stands for message. When calling git commit , it is required to include a message. 
		The message should be a short description of the changes being committed. 
		The message should be at the end of the command and it must be wrapped in quotations " " .
		
11.git amend
		The git commit --amend command is a convenient way to modify the most recent commit. 
		It lets you combine staged changes with the previous commit instead of creating an entirely new commit. 
		It can also be used to simply edit the previous commit message without changing its snapshot.
		
12.git remote origin
		When you clone a repository with git clone , it automatically creates a remote connection called origin pointing back to the cloned repository.
		This is useful for developers creating a local copy of a central repository, since it provides an easy way to pull upstream changes or publish local commits.
	
	
*We need to follow these steps which are mentioned below in the cmd	to push the files.
			git init
			git add README.md
			git commit -m "first commit"
			git branch -M main
			git remote add origin https://github.com/Anilkumar-Veluru/Notes.git
			git push -u origin main
			
*